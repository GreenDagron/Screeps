var roleHarvester = {
	/** @param {Creep} creep **/
    run: function(creep) {
		//Sets working memory for creep
		if(creep.carry.energy == 0) {
			creep.memory.working = false;
		}
		else if(creep.carry.energy == creep.carryCapacity) {
			creep.memory.working = true;
		}
		
		if(creep.memory.working) {
			let targets = creep.pos.findClosestByPath(FIND_MY_STRUCTURES, {
				filter: (structure) => {
					return (structure.structureType == STRUCTURE_SPAWN ||
						structure.structureType == STRUCTURE_EXTENSION ||
						structure.structureType == STRUCTURE_TOWER)
						&& structure.energy < structure.energyCapacity;
				}
			});
			if(!targets) {
				targets = creep.pos.findClosestByPath(FIND_STRUCTURES, {
					filter: (structure) => {
						return (structure.structureType == STRUCTURE_CONTAINER)
						&& structure.store.energy < structure.storeCapacity;
					}
				});
			}
			if(targets) {
				if(creep.transfer(targets, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
					creep.moveTo(targets);
				}
			}
		}
		else {
			let source = creep.pos.findClosestByPath(FIND_SOURCES);
			if(creep.harvest(source) == ERR_NOT_IN_RANGE) {
                creep.moveTo(source);
            }
		}
	}
};

module.exports = roleHarvester;
